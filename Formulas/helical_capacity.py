# soil type: 1 - clay, 2 - silt, 3 - sand

import math as m
from numpy import interp # needed for interpolation in calculating settlement

pi = 3.14

# Material stiffness (Young's modulus)
stiffness = 29000000

#CPT Indices
#{soil type:Ic)
cpt_index = {1:3.02,
             2:2.68,
             3:1.27}

# coefficients for calculating soil weight for soil types
# structure: {soil_type:[[coeffs for water_table < depth],[coeffs for water_table >= depth]],...}
#            coeffs for water table < or >= depth: min(c1 + c2 * spt + c3, c4)
soil_weight_coeffs = {1:[[28,0.87,135],[92,0.85,135]],
                            2:[[49,0.48,135],[76,1.2,135]],
                            3:[[50,0.46,135],[80,1.1,135]]}

# coefficients for calculating PHI
# structure: {soil_type: [c1,c2]}
#  example: c1 + c2 * spt
phi_coeffs = {3:[27,0.3]}

# coefficients for calculating Cohesion
# structure: {soil_type: [c1]}
cohesion_coeffs = {1:[125],
                   2:[125],
                   3:[1]}

# coefficients for calculating q
# usaed for clay and silt
# structure: [[single][double][triple]]
#  (A - area, calculated as: pi / 4 * (helix_diameter / 12)^2)
# single:    A * (c0 - c1  * LN( spt )) * c2  * spt
#   example: A * (helix_diameter / 12) ^ 2  * (14 - 1.7 * LN( spt )) * 125 * spt
# double:    (A1 * c0  * spt * (c1 - c2  * ln(spt)) + c3   * A2 * c4  * spt * (c5 - c6  * ln(spt))) / tension_load_sf
#   example: (A1 * 125 * spt * (14 - 1.7 * ln(spt)) + 0.75 * A2 * 125 * spt * (14 - 1.7 * ln(spt))) / tension_load_sf
# triple:    (A1 * c0  * spt * (c1 - c2  * ln(spt)) + c3   * A2 * c4  * spt * (c5 - c6  * ln(spt)) + c7  * A3 * c8  - c9  * ln(spt))) / tension_load_sf
# # example: (A1 * 125 * spt * (14 - 1.7 * ln(spt)) + 0.75 * A2 * 125 * spt * (14 - 1.7 * ln(spt)) + 0.5 * A3 * (14 - 1.7 * ln(spt))) / tension_load_sf
# sand:
q_coeffs = [[14,1.7,125],
            [125,14,1.7,0.75,125,14,1.7],
            [125,14,1.7,0.75,125,14,1.7,0.5,14,1.7]]

# helix types
# structure: <helix_diameter(s)>:<pile length>
helices = {'8':0,'10':0,'12':0,'14':0,'16':0,'19':0,'8/10':0,'10/12':0,'14/14':0,'8/10/12':0,'10/12/14':0}

# constants for calculating settlement
ba = [0.10, 0.30, 0.50, 0.70]
ky = [0.0757, 0.0318, 0.0086, 0.0011]

# Shaft area
shaft_areas = {1.5:2.2, 2.88:1.5, 4.5:2.97}

#fq table
# structure: {phi:{nq:fq,...},...}
fq_table = {25:{0.5:3.9525,1:5.055,1.5:6.3075,2:7.7025,2.5:9.2475,3:10.95,3.5:10.95,4:10.95,4.5:10.95,5:10.95,5.5:10.95,6:10.95,6.5:10.95,7:10.95,7.5:10.95,8:10.95,8.5:10.95,9:10.95,9.5:10.95,10:10.95,10.5:10.95,11:10.95,11.5:10.95,12:10.95,12.5:10.95,13:10.95,13.5:10.95,14:10.95,14.5:10.95,15:10.95,15.5:10.95,16:10.95,16.5:10.95,17:10.95,17.5:10.95,18:10.95,18.5:10.95,19:10.95,19.5:10.95,20:10.95,20.5:10.95,21:10.95,21.5:10.95,22:10.95,22.5:10.95,23:10.95,23.5:10.95,24:10.95,24.5:10.95,25:10.95,25.5:10.95,26:10.95,26.5:10.95,27:10.95,27.5:10.95,28:10.95,28.5:10.95,29:10.95,29.5:10.95,30:10.95,30.5:10.95,31:10.95,31.5:10.95,32:10.95,32.5:10.95,33:10.95,33.5:10.95,34:10.95,34.5:10.95,35:10.95,35.5:10.95,36:10.95,36.5:10.95,37:10.95,37.5:10.95,38:10.95,38.5:10.95,39:10.95,39.5:10.95,40:10.95,40.5:10.95,41:10.95,41.5:10.95,42:10.95,42.5:10.95,43:10.95,43.5:10.95,44:10.95,44.5:10.95,45:10.95,45.5:10.95,46:10.95,46.5:10.95,47:10.95,47.5:10.95,48:10.95,48.5:10.95,49:10.95,49.5:10.95,50:10.95,50.5:10.95,51:10.95,51.5:10.95,52:10.95,52.5:10.95,53:10.95,53.5:10.95,54:10.95,54.5:10.95,55:10.95,55.5:10.95,56:10.95,56.5:10.95,57:10.95,57.5:10.95,58:10.95,58.5:10.95,59:10.95,59.5:10.95,60:10.95,60.5:10.95,61:10.95,61.5:10.95,62:10.95,62.5:10.95,63:10.95,63.5:10.95,64:10.95,64.5:10.95,65:10.95,65.5:10.95,66:10.95,66.5:10.95,67:10.95,67.5:10.95,68:10.95,68.5:10.95,69:10.95,69.5:10.95,70:10.95,70.5:10.95,71:10.95,71.5:10.95,72:10.95,72.5:10.95,73:10.95,73.5:10.95,74:10.95,74.5:10.95,75:10.95},
            26:{0.5:3.924304,1:5.059488,1.5:6.358704,2:7.814576,2.5:9.437232,3:11.232672,3.5:11.715648,4:12.24816,4.5:12.24816,5:12.24816,5.5:12.24816,6:12.24816,6.5:12.24816,7:12.24816,7.5:12.24816,8:12.24816,8.5:12.24816,9:12.24816,9.5:12.24816,10:12.24816,10.5:12.24816,11:12.24816,11.5:12.24816,12:12.24816,12.5:12.24816,13:12.24816,13.5:12.24816,14:12.24816,14.5:12.24816,15:12.24816,15.5:12.24816,16:12.24816,16.5:12.24816,17:12.24816,17.5:12.24816,18:12.24816,18.5:12.24816,19:12.24816,19.5:12.24816,20:12.24816,20.5:12.24816,21:12.24816,21.5:12.24816,22:12.24816,22.5:12.24816,23:12.24816,23.5:12.24816,24:12.24816,24.5:12.24816,25:12.24816,25.5:12.24816,26:12.24816,26.5:12.24816,27:12.24816,27.5:12.24816,28:12.24816,28.5:12.24816,29:12.24816,29.5:12.24816,30:12.24816,30.5:12.24816,31:12.24816,31.5:12.24816,32:12.24816,32.5:12.24816,33:12.24816,33.5:12.24816,34:12.24816,34.5:12.24816,35:12.24816,35.5:12.24816,36:12.24816,36.5:12.24816,37:12.24816,37.5:12.24816,38:12.24816,38.5:12.24816,39:12.24816,39.5:12.24816,40:12.24816,40.5:12.24816,41:12.24816,41.5:12.24816,42:12.24816,42.5:12.24816,43:12.24816,43.5:12.24816,44:12.24816,44.5:12.24816,45:12.24816,45.5:12.24816,46:12.24816,46.5:12.24816,47:12.24816,47.5:12.24816,48:12.24816,48.5:12.24816,49:12.24816,49.5:12.24816,50:12.24816,50.5:12.24816,51:12.24816,51.5:12.24816,52:12.24816,52.5:12.24816,53:12.24816,53.5:12.24816,54:12.24816,54.5:12.24816,55:12.24816,55.5:12.24816,56:12.24816,56.5:12.24816,57:12.24816,57.5:12.24816,58:12.24816,58.5:12.24816,59:12.24816,59.5:12.24816,60:12.24816,60.5:12.24816,61:12.24816,61.5:12.24816,62:12.24816,62.5:12.24816,63:12.24816,63.5:12.24816,64:12.24816,64.5:12.24816,65:12.24816,65.5:12.24816,66:12.24816,66.5:12.24816,67:12.24816,67.5:12.24816,68:12.24816,68.5:12.24816,69:12.24816,69.5:12.24816,70:12.24816,70.5:12.24816,71:12.24816,71.5:12.24816,72:12.24816,72.5:12.24816,73:12.24816,73.5:12.24816,74:12.24816,74.5:12.24816,75:12.24816},
            27:{0.5:3.896108,1:5.063976,1.5:6.409908,2:7.926652,2.5:9.626964,3:11.515344,3.5:12.481296,4:13.54632,4.5:13.54632,5:13.54632,5.5:13.54632,6:13.54632,6.5:13.54632,7:13.54632,7.5:13.54632,8:13.54632,8.5:13.54632,9:13.54632,9.5:13.54632,10:13.54632,10.5:13.54632,11:13.54632,11.5:13.54632,12:13.54632,12.5:13.54632,13:13.54632,13.5:13.54632,14:13.54632,14.5:13.54632,15:13.54632,15.5:13.54632,16:13.54632,16.5:13.54632,17:13.54632,17.5:13.54632,18:13.54632,18.5:13.54632,19:13.54632,19.5:13.54632,20:13.54632,20.5:13.54632,21:13.54632,21.5:13.54632,22:13.54632,22.5:13.54632,23:13.54632,23.5:13.54632,24:13.54632,24.5:13.54632,25:13.54632,25.5:13.54632,26:13.54632,26.5:13.54632,27:13.54632,27.5:13.54632,28:13.54632,28.5:13.54632,29:13.54632,29.5:13.54632,30:13.54632,30.5:13.54632,31:13.54632,31.5:13.54632,32:13.54632,32.5:13.54632,33:13.54632,33.5:13.54632,34:13.54632,34.5:13.54632,35:13.54632,35.5:13.54632,36:13.54632,36.5:13.54632,37:13.54632,37.5:13.54632,38:13.54632,38.5:13.54632,39:13.54632,39.5:13.54632,40:13.54632,40.5:13.54632,41:13.54632,41.5:13.54632,42:13.54632,42.5:13.54632,43:13.54632,43.5:13.54632,44:13.54632,44.5:13.54632,45:13.54632,45.5:13.54632,46:13.54632,46.5:13.54632,47:13.54632,47.5:13.54632,48:13.54632,48.5:13.54632,49:13.54632,49.5:13.54632,50:13.54632,50.5:13.54632,51:13.54632,51.5:13.54632,52:13.54632,52.5:13.54632,53:13.54632,53.5:13.54632,54:13.54632,54.5:13.54632,55:13.54632,55.5:13.54632,56:13.54632,56.5:13.54632,57:13.54632,57.5:13.54632,58:13.54632,58.5:13.54632,59:13.54632,59.5:13.54632,60:13.54632,60.5:13.54632,61:13.54632,61.5:13.54632,62:13.54632,62.5:13.54632,63:13.54632,63.5:13.54632,64:13.54632,64.5:13.54632,65:13.54632,65.5:13.54632,66:13.54632,66.5:13.54632,67:13.54632,67.5:13.54632,68:13.54632,68.5:13.54632,69:13.54632,69.5:13.54632,70:13.54632,70.5:13.54632,71:13.54632,71.5:13.54632,72:13.54632,72.5:13.54632,73:13.54632,73.5:13.54632,74:13.54632,74.5:13.54632,75:13.54632},
            28:{0.5:3.867912,1:5.068464,1.5:6.461112,2:8.038728,2.5:9.816696,3:11.798016,3.5:13.246944,4:14.84448,4.5:14.84448,5:14.84448,5.5:14.84448,6:14.84448,6.5:14.84448,7:14.84448,7.5:14.84448,8:14.84448,8.5:14.84448,9:14.84448,9.5:14.84448,10:14.84448,10.5:14.84448,11:14.84448,11.5:14.84448,12:14.84448,12.5:14.84448,13:14.84448,13.5:14.84448,14:14.84448,14.5:14.84448,15:14.84448,15.5:14.84448,16:14.84448,16.5:14.84448,17:14.84448,17.5:14.84448,18:14.84448,18.5:14.84448,19:14.84448,19.5:14.84448,20:14.84448,20.5:14.84448,21:14.84448,21.5:14.84448,22:14.84448,22.5:14.84448,23:14.84448,23.5:14.84448,24:14.84448,24.5:14.84448,25:14.84448,25.5:14.84448,26:14.84448,26.5:14.84448,27:14.84448,27.5:14.84448,28:14.84448,28.5:14.84448,29:14.84448,29.5:14.84448,30:14.84448,30.5:14.84448,31:14.84448,31.5:14.84448,32:14.84448,32.5:14.84448,33:14.84448,33.5:14.84448,34:14.84448,34.5:14.84448,35:14.84448,35.5:14.84448,36:14.84448,36.5:14.84448,37:14.84448,37.5:14.84448,38:14.84448,38.5:14.84448,39:14.84448,39.5:14.84448,40:14.84448,40.5:14.84448,41:14.84448,41.5:14.84448,42:14.84448,42.5:14.84448,43:14.84448,43.5:14.84448,44:14.84448,44.5:14.84448,45:14.84448,45.5:14.84448,46:14.84448,46.5:14.84448,47:14.84448,47.5:14.84448,48:14.84448,48.5:14.84448,49:14.84448,49.5:14.84448,50:14.84448,50.5:14.84448,51:14.84448,51.5:14.84448,52:14.84448,52.5:14.84448,53:14.84448,53.5:14.84448,54:14.84448,54.5:14.84448,55:14.84448,55.5:14.84448,56:14.84448,56.5:14.84448,57:14.84448,57.5:14.84448,58:14.84448,58.5:14.84448,59:14.84448,59.5:14.84448,60:14.84448,60.5:14.84448,61:14.84448,61.5:14.84448,62:14.84448,62.5:14.84448,63:14.84448,63.5:14.84448,64:14.84448,64.5:14.84448,65:14.84448,65.5:14.84448,66:14.84448,66.5:14.84448,67:14.84448,67.5:14.84448,68:14.84448,68.5:14.84448,69:14.84448,69.5:14.84448,70:14.84448,70.5:14.84448,71:14.84448,71.5:14.84448,72:14.84448,72.5:14.84448,73:14.84448,73.5:14.84448,74:14.84448,74.5:14.84448,75:14.84448},
            29:{0.5:3.839716,1:5.072952,1.5:6.512316,2:8.150804,2.5:10.006428,3:12.080688,3.5:14.012592,4:16.14264,4.5:16.14264,5:16.14264,5.5:16.14264,6:16.14264,6.5:16.14264,7:16.14264,7.5:16.14264,8:16.14264,8.5:16.14264,9:16.14264,9.5:16.14264,10:16.14264,10.5:16.14264,11:16.14264,11.5:16.14264,12:16.14264,12.5:16.14264,13:16.14264,13.5:16.14264,14:16.14264,14.5:16.14264,15:16.14264,15.5:16.14264,16:16.14264,16.5:16.14264,17:16.14264,17.5:16.14264,18:16.14264,18.5:16.14264,19:16.14264,19.5:16.14264,20:16.14264,20.5:16.14264,21:16.14264,21.5:16.14264,22:16.14264,22.5:16.14264,23:16.14264,23.5:16.14264,24:16.14264,24.5:16.14264,25:16.14264,25.5:16.14264,26:16.14264,26.5:16.14264,27:16.14264,27.5:16.14264,28:16.14264,28.5:16.14264,29:16.14264,29.5:16.14264,30:16.14264,30.5:16.14264,31:16.14264,31.5:16.14264,32:16.14264,32.5:16.14264,33:16.14264,33.5:16.14264,34:16.14264,34.5:16.14264,35:16.14264,35.5:16.14264,36:16.14264,36.5:16.14264,37:16.14264,37.5:16.14264,38:16.14264,38.5:16.14264,39:16.14264,39.5:16.14264,40:16.14264,40.5:16.14264,41:16.14264,41.5:16.14264,42:16.14264,42.5:16.14264,43:16.14264,43.5:16.14264,44:16.14264,44.5:16.14264,45:16.14264,45.5:16.14264,46:16.14264,46.5:16.14264,47:16.14264,47.5:16.14264,48:16.14264,48.5:16.14264,49:16.14264,49.5:16.14264,50:16.14264,50.5:16.14264,51:16.14264,51.5:16.14264,52:16.14264,52.5:16.14264,53:16.14264,53.5:16.14264,54:16.14264,54.5:16.14264,55:16.14264,55.5:16.14264,56:16.14264,56.5:16.14264,57:16.14264,57.5:16.14264,58:16.14264,58.5:16.14264,59:16.14264,59.5:16.14264,60:16.14264,60.5:16.14264,61:16.14264,61.5:16.14264,62:16.14264,62.5:16.14264,63:16.14264,63.5:16.14264,64:16.14264,64.5:16.14264,65:16.14264,65.5:16.14264,66:16.14264,66.5:16.14264,67:16.14264,67.5:16.14264,68:16.14264,68.5:16.14264,69:16.14264,69.5:16.14264,70:16.14264,70.5:16.14264,71:16.14264,71.5:16.14264,72:16.14264,72.5:16.14264,73:16.14264,73.5:16.14264,74:16.14264,74.5:16.14264,75:16.14264},
            30:{0.5:3.81152,1:5.07744,1.5:6.56352,2:8.26288,2.5:10.19616,3:12.36336,3.5:14.77824,4:17.4408,4.5:17.4408,5:17.4408,5.5:17.4408,6:17.4408,6.5:17.4408,7:17.4408,7.5:17.4408,8:17.4408,8.5:17.4408,9:17.4408,9.5:17.4408,10:17.4408,10.5:17.4408,11:17.4408,11.5:17.4408,12:17.4408,12.5:17.4408,13:17.4408,13.5:17.4408,14:17.4408,14.5:17.4408,15:17.4408,15.5:17.4408,16:17.4408,16.5:17.4408,17:17.4408,17.5:17.4408,18:17.4408,18.5:17.4408,19:17.4408,19.5:17.4408,20:17.4408,20.5:17.4408,21:17.4408,21.5:17.4408,22:17.4408,22.5:17.4408,23:17.4408,23.5:17.4408,24:17.4408,24.5:17.4408,25:17.4408,25.5:17.4408,26:17.4408,26.5:17.4408,27:17.4408,27.5:17.4408,28:17.4408,28.5:17.4408,29:17.4408,29.5:17.4408,30:17.4408,30.5:17.4408,31:17.4408,31.5:17.4408,32:17.4408,32.5:17.4408,33:17.4408,33.5:17.4408,34:17.4408,34.5:17.4408,35:17.4408,35.5:17.4408,36:17.4408,36.5:17.4408,37:17.4408,37.5:17.4408,38:17.4408,38.5:17.4408,39:17.4408,39.5:17.4408,40:17.4408,40.5:17.4408,41:17.4408,41.5:17.4408,42:17.4408,42.5:17.4408,43:17.4408,43.5:17.4408,44:17.4408,44.5:17.4408,45:17.4408,45.5:17.4408,46:17.4408,46.5:17.4408,47:17.4408,47.5:17.4408,48:17.4408,48.5:17.4408,49:17.4408,49.5:17.4408,50:17.4408,50.5:17.4408,51:17.4408,51.5:17.4408,52:17.4408,52.5:17.4408,53:17.4408,53.5:17.4408,54:17.4408,54.5:17.4408,55:17.4408,55.5:17.4408,56:17.4408,56.5:17.4408,57:17.4408,57.5:17.4408,58:17.4408,58.5:17.4408,59:17.4408,59.5:17.4408,60:17.4408,60.5:17.4408,61:17.4408,61.5:17.4408,62:17.4408,62.5:17.4408,63:17.4408,63.5:17.4408,64:17.4408,64.5:17.4408,65:17.4408,65.5:17.4408,66:17.4408,66.5:17.4408,67:17.4408,67.5:17.4408,68:17.4408,68.5:17.4408,69:17.4408,69.5:17.4408,70:17.4408,70.5:17.4408,71:17.4408,71.5:17.4408,72:17.4408,72.5:17.4408,73:17.4408,73.5:17.4408,74:17.4408,74.5:17.4408,75:17.4408},
            31:{0.5:3.782966,1:5.093202,1.5:6.645816,2:8.440304,2.5:10.496928,3:12.820688,3.5:15.427592,4:18.32139,4.5:19.17889,5:20.13514,5.5:20.13514,6:20.13514,6.5:20.13514,7:20.13514,7.5:20.13514,8:20.13514,8.5:20.13514,9:20.13514,9.5:20.13514,10:20.13514,10.5:20.13514,11:20.13514,11.5:20.13514,12:20.13514,12.5:20.13514,13:20.13514,13.5:20.13514,14:20.13514,14.5:20.13514,15:20.13514,15.5:20.13514,16:20.13514,16.5:20.13514,17:20.13514,17.5:20.13514,18:20.13514,18.5:20.13514,19:20.13514,19.5:20.13514,20:20.13514,20.5:20.13514,21:20.13514,21.5:20.13514,22:20.13514,22.5:20.13514,23:20.13514,23.5:20.13514,24:20.13514,24.5:20.13514,25:20.13514,25.5:20.13514,26:20.13514,26.5:20.13514,27:20.13514,27.5:20.13514,28:20.13514,28.5:20.13514,29:20.13514,29.5:20.13514,30:20.13514,30.5:20.13514,31:20.13514,31.5:20.13514,32:20.13514,32.5:20.13514,33:20.13514,33.5:20.13514,34:20.13514,34.5:20.13514,35:20.13514,35.5:20.13514,36:20.13514,36.5:20.13514,37:20.13514,37.5:20.13514,38:20.13514,38.5:20.13514,39:20.13514,39.5:20.13514,40:20.13514,40.5:20.13514,41:20.13514,41.5:20.13514,42:20.13514,42.5:20.13514,43:20.13514,43.5:20.13514,44:20.13514,44.5:20.13514,45:20.13514,45.5:20.13514,46:20.13514,46.5:20.13514,47:20.13514,47.5:20.13514,48:20.13514,48.5:20.13514,49:20.13514,49.5:20.13514,50:20.13514,50.5:20.13514,51:20.13514,51.5:20.13514,52:20.13514,52.5:20.13514,53:20.13514,53.5:20.13514,54:20.13514,54.5:20.13514,55:20.13514,55.5:20.13514,56:20.13514,56.5:20.13514,57:20.13514,57.5:20.13514,58:20.13514,58.5:20.13514,59:20.13514,59.5:20.13514,60:20.13514,60.5:20.13514,61:20.13514,61.5:20.13514,62:20.13514,62.5:20.13514,63:20.13514,63.5:20.13514,64:20.13514,64.5:20.13514,65:20.13514,65.5:20.13514,66:20.13514,66.5:20.13514,67:20.13514,67.5:20.13514,68:20.13514,68.5:20.13514,69:20.13514,69.5:20.13514,70:20.13514,70.5:20.13514,71:20.13514,71.5:20.13514,72:20.13514,72.5:20.13514,73:20.13514,73.5:20.13514,74:20.13514,74.5:20.13514,75:20.13514},
            32:{0.5:3.754412,1:5.108964,1.5:6.728112,2:8.617728,2.5:10.797696,3:13.278016,3.5:16.076944,4:19.20198,4.5:20.91698,5:22.82948,5.5:22.82948,6:22.82948,6.5:22.82948,7:22.82948,7.5:22.82948,8:22.82948,8.5:22.82948,9:22.82948,9.5:22.82948,10:22.82948,10.5:22.82948,11:22.82948,11.5:22.82948,12:22.82948,12.5:22.82948,13:22.82948,13.5:22.82948,14:22.82948,14.5:22.82948,15:22.82948,15.5:22.82948,16:22.82948,16.5:22.82948,17:22.82948,17.5:22.82948,18:22.82948,18.5:22.82948,19:22.82948,19.5:22.82948,20:22.82948,20.5:22.82948,21:22.82948,21.5:22.82948,22:22.82948,22.5:22.82948,23:22.82948,23.5:22.82948,24:22.82948,24.5:22.82948,25:22.82948,25.5:22.82948,26:22.82948,26.5:22.82948,27:22.82948,27.5:22.82948,28:22.82948,28.5:22.82948,29:22.82948,29.5:22.82948,30:22.82948,30.5:22.82948,31:22.82948,31.5:22.82948,32:22.82948,32.5:22.82948,33:22.82948,33.5:22.82948,34:22.82948,34.5:22.82948,35:22.82948,35.5:22.82948,36:22.82948,36.5:22.82948,37:22.82948,37.5:22.82948,38:22.82948,38.5:22.82948,39:22.82948,39.5:22.82948,40:22.82948,40.5:22.82948,41:22.82948,41.5:22.82948,42:22.82948,42.5:22.82948,43:22.82948,43.5:22.82948,44:22.82948,44.5:22.82948,45:22.82948,45.5:22.82948,46:22.82948,46.5:22.82948,47:22.82948,47.5:22.82948,48:22.82948,48.5:22.82948,49:22.82948,49.5:22.82948,50:22.82948,50.5:22.82948,51:22.82948,51.5:22.82948,52:22.82948,52.5:22.82948,53:22.82948,53.5:22.82948,54:22.82948,54.5:22.82948,55:22.82948,55.5:22.82948,56:22.82948,56.5:22.82948,57:22.82948,57.5:22.82948,58:22.82948,58.5:22.82948,59:22.82948,59.5:22.82948,60:22.82948,60.5:22.82948,61:22.82948,61.5:22.82948,62:22.82948,62.5:22.82948,63:22.82948,63.5:22.82948,64:22.82948,64.5:22.82948,65:22.82948,65.5:22.82948,66:22.82948,66.5:22.82948,67:22.82948,67.5:22.82948,68:22.82948,68.5:22.82948,69:22.82948,69.5:22.82948,70:22.82948,70.5:22.82948,71:22.82948,71.5:22.82948,72:22.82948,72.5:22.82948,73:22.82948,73.5:22.82948,74:22.82948,74.5:22.82948,75:22.82948},
            33:{0.5:3.725858,1:5.124726,1.5:6.810408,2:8.795152,2.5:11.098464,3:13.735344,3.5:16.726296,4:20.08257,4.5:22.65507,5:25.52382,5.5:25.52382,6:25.52382,6.5:25.52382,7:25.52382,7.5:25.52382,8:25.52382,8.5:25.52382,9:25.52382,9.5:25.52382,10:25.52382,10.5:25.52382,11:25.52382,11.5:25.52382,12:25.52382,12.5:25.52382,13:25.52382,13.5:25.52382,14:25.52382,14.5:25.52382,15:25.52382,15.5:25.52382,16:25.52382,16.5:25.52382,17:25.52382,17.5:25.52382,18:25.52382,18.5:25.52382,19:25.52382,19.5:25.52382,20:25.52382,20.5:25.52382,21:25.52382,21.5:25.52382,22:25.52382,22.5:25.52382,23:25.52382,23.5:25.52382,24:25.52382,24.5:25.52382,25:25.52382,25.5:25.52382,26:25.52382,26.5:25.52382,27:25.52382,27.5:25.52382,28:25.52382,28.5:25.52382,29:25.52382,29.5:25.52382,30:25.52382,30.5:25.52382,31:25.52382,31.5:25.52382,32:25.52382,32.5:25.52382,33:25.52382,33.5:25.52382,34:25.52382,34.5:25.52382,35:25.52382,35.5:25.52382,36:25.52382,36.5:25.52382,37:25.52382,37.5:25.52382,38:25.52382,38.5:25.52382,39:25.52382,39.5:25.52382,40:25.52382,40.5:25.52382,41:25.52382,41.5:25.52382,42:25.52382,42.5:25.52382,43:25.52382,43.5:25.52382,44:25.52382,44.5:25.52382,45:25.52382,45.5:25.52382,46:25.52382,46.5:25.52382,47:25.52382,47.5:25.52382,48:25.52382,48.5:25.52382,49:25.52382,49.5:25.52382,50:25.52382,50.5:25.52382,51:25.52382,51.5:25.52382,52:25.52382,52.5:25.52382,53:25.52382,53.5:25.52382,54:25.52382,54.5:25.52382,55:25.52382,55.5:25.52382,56:25.52382,56.5:25.52382,57:25.52382,57.5:25.52382,58:25.52382,58.5:25.52382,59:25.52382,59.5:25.52382,60:25.52382,60.5:25.52382,61:25.52382,61.5:25.52382,62:25.52382,62.5:25.52382,63:25.52382,63.5:25.52382,64:25.52382,64.5:25.52382,65:25.52382,65.5:25.52382,66:25.52382,66.5:25.52382,67:25.52382,67.5:25.52382,68:25.52382,68.5:25.52382,69:25.52382,69.5:25.52382,70:25.52382,70.5:25.52382,71:25.52382,71.5:25.52382,72:25.52382,72.5:25.52382,73:25.52382,73.5:25.52382,74:25.52382,74.5:25.52382,75:25.52382},
            34:{0.5:3.697304,1:5.140488,1.5:6.892704,2:8.972576,2.5:11.399232,3:14.192672,3.5:17.375648,4:20.96316,4.5:24.39316,5:28.21816,5.5:28.21816,6:28.21816,6.5:28.21816,7:28.21816,7.5:28.21816,8:28.21816,8.5:28.21816,9:28.21816,9.5:28.21816,10:28.21816,10.5:28.21816,11:28.21816,11.5:28.21816,12:28.21816,12.5:28.21816,13:28.21816,13.5:28.21816,14:28.21816,14.5:28.21816,15:28.21816,15.5:28.21816,16:28.21816,16.5:28.21816,17:28.21816,17.5:28.21816,18:28.21816,18.5:28.21816,19:28.21816,19.5:28.21816,20:28.21816,20.5:28.21816,21:28.21816,21.5:28.21816,22:28.21816,22.5:28.21816,23:28.21816,23.5:28.21816,24:28.21816,24.5:28.21816,25:28.21816,25.5:28.21816,26:28.21816,26.5:28.21816,27:28.21816,27.5:28.21816,28:28.21816,28.5:28.21816,29:28.21816,29.5:28.21816,30:28.21816,30.5:28.21816,31:28.21816,31.5:28.21816,32:28.21816,32.5:28.21816,33:28.21816,33.5:28.21816,34:28.21816,34.5:28.21816,35:28.21816,35.5:28.21816,36:28.21816,36.5:28.21816,37:28.21816,37.5:28.21816,38:28.21816,38.5:28.21816,39:28.21816,39.5:28.21816,40:28.21816,40.5:28.21816,41:28.21816,41.5:28.21816,42:28.21816,42.5:28.21816,43:28.21816,43.5:28.21816,44:28.21816,44.5:28.21816,45:28.21816,45.5:28.21816,46:28.21816,46.5:28.21816,47:28.21816,47.5:28.21816,48:28.21816,48.5:28.21816,49:28.21816,49.5:28.21816,50:28.21816,50.5:28.21816,51:28.21816,51.5:28.21816,52:28.21816,52.5:28.21816,53:28.21816,53.5:28.21816,54:28.21816,54.5:28.21816,55:28.21816,55.5:28.21816,56:28.21816,56.5:28.21816,57:28.21816,57.5:28.21816,58:28.21816,58.5:28.21816,59:28.21816,59.5:28.21816,60:28.21816,60.5:28.21816,61:28.21816,61.5:28.21816,62:28.21816,62.5:28.21816,63:28.21816,63.5:28.21816,64:28.21816,64.5:28.21816,65:28.21816,65.5:28.21816,66:28.21816,66.5:28.21816,67:28.21816,67.5:28.21816,68:28.21816,68.5:28.21816,69:28.21816,69.5:28.21816,70:28.21816,70.5:28.21816,71:28.21816,71.5:28.21816,72:28.21816,72.5:28.21816,73:28.21816,73.5:28.21816,74:28.21816,74.5:28.21816,75:28.21816},
            35:{0.5:3.66875,1:5.15625,1.5:6.975,2:9.15,2.5:11.7,3:14.65,3.5:18.025,4:21.84375,4.5:26.13125,5:30.9125,5.5:30.9125,6:30.9125,6.5:30.9125,7:30.9125,7.5:30.9125,8:30.9125,8.5:30.9125,9:30.9125,9.5:30.9125,10:30.9125,10.5:30.9125,11:30.9125,11.5:30.9125,12:30.9125,12.5:30.9125,13:30.9125,13.5:30.9125,14:30.9125,14.5:30.9125,15:30.9125,15.5:30.9125,16:30.9125,16.5:30.9125,17:30.9125,17.5:30.9125,18:30.9125,18.5:30.9125,19:30.9125,19.5:30.9125,20:30.9125,20.5:30.9125,21:30.9125,21.5:30.9125,22:30.9125,22.5:30.9125,23:30.9125,23.5:30.9125,24:30.9125,24.5:30.9125,25:30.9125,25.5:30.9125,26:30.9125,26.5:30.9125,27:30.9125,27.5:30.9125,28:30.9125,28.5:30.9125,29:30.9125,29.5:30.9125,30:30.9125,30.5:30.9125,31:30.9125,31.5:30.9125,32:30.9125,32.5:30.9125,33:30.9125,33.5:30.9125,34:30.9125,34.5:30.9125,35:30.9125,35.5:30.9125,36:30.9125,36.5:30.9125,37:30.9125,37.5:30.9125,38:30.9125,38.5:30.9125,39:30.9125,39.5:30.9125,40:30.9125,40.5:30.9125,41:30.9125,41.5:30.9125,42:30.9125,42.5:30.9125,43:30.9125,43.5:30.9125,44:30.9125,44.5:30.9125,45:30.9125,45.5:30.9125,46:30.9125,46.5:30.9125,47:30.9125,47.5:30.9125,48:30.9125,48.5:30.9125,49:30.9125,49.5:30.9125,50:30.9125,50.5:30.9125,51:30.9125,51.5:30.9125,52:30.9125,52.5:30.9125,53:30.9125,53.5:30.9125,54:30.9125,54.5:30.9125,55:30.9125,55.5:30.9125,56:30.9125,56.5:30.9125,57:30.9125,57.5:30.9125,58:30.9125,58.5:30.9125,59:30.9125,59.5:30.9125,60:30.9125,60.5:30.9125,61:30.9125,61.5:30.9125,62:30.9125,62.5:30.9125,63:30.9125,63.5:30.9125,64:30.9125,64.5:30.9125,65:30.9125,65.5:30.9125,66:30.9125,66.5:30.9125,67:30.9125,67.5:30.9125,68:30.9125,68.5:30.9125,69:30.9125,69.5:30.9125,70:30.9125,70.5:30.9125,71:30.9125,71.5:30.9125,72:30.9125,72.5:30.9125,73:30.9125,73.5:30.9125,74:30.9125,74.5:30.9125,75:30.9125},
            36:{0.5:3.636498,1:5.158668,1.5:7.033666,2:9.289374,2.5:11.948674,3:15.037196,3.5:18.585074,4:22.614064,4.5:27.147544,5:32.224656,5.5:33.622022,6:35.174776,6.5:36.891926,7:38.780228,7.5:38.780228,8:38.780228,8.5:38.780228,9:38.780228,9.5:38.780228,10:38.780228,10.5:38.780228,11:38.780228,11.5:38.780228,12:38.780228,12.5:38.780228,13:38.780228,13.5:38.780228,14:38.780228,14.5:38.780228,15:38.780228,15.5:38.780228,16:38.780228,16.5:38.780228,17:38.780228,17.5:38.780228,18:38.780228,18.5:38.780228,19:38.780228,19.5:38.780228,20:38.780228,20.5:38.780228,21:38.780228,21.5:38.780228,22:38.780228,22.5:38.780228,23:38.780228,23.5:38.780228,24:38.780228,24.5:38.780228,25:38.780228,25.5:38.780228,26:38.780228,26.5:38.780228,27:38.780228,27.5:38.780228,28:38.780228,28.5:38.780228,29:38.780228,29.5:38.780228,30:38.780228,30.5:38.780228,31:38.780228,31.5:38.780228,32:38.780228,32.5:38.780228,33:38.780228,33.5:38.780228,34:38.780228,34.5:38.780228,35:38.780228,35.5:38.780228,36:38.780228,36.5:38.780228,37:38.780228,37.5:38.780228,38:38.780228,38.5:38.780228,39:38.780228,39.5:38.780228,40:38.780228,40.5:38.780228,41:38.780228,41.5:38.780228,42:38.780228,42.5:38.780228,43:38.780228,43.5:38.780228,44:38.780228,44.5:38.780228,45:38.780228,45.5:38.780228,46:38.780228,46.5:38.780228,47:38.780228,47.5:38.780228,48:38.780228,48.5:38.780228,49:38.780228,49.5:38.780228,50:38.780228,50.5:38.780228,51:38.780228,51.5:38.780228,52:38.780228,52.5:38.780228,53:38.780228,53.5:38.780228,54:38.780228,54.5:38.780228,55:38.780228,55.5:38.780228,56:38.780228,56.5:38.780228,57:38.780228,57.5:38.780228,58:38.780228,58.5:38.780228,59:38.780228,59.5:38.780228,60:38.780228,60.5:38.780228,61:38.780228,61.5:38.780228,62:38.780228,62.5:38.780228,63:38.780228,63.5:38.780228,64:38.780228,64.5:38.780228,65:38.780228,65.5:38.780228,66:38.780228,66.5:38.780228,67:38.780228,67.5:38.780228,68:38.780228,68.5:38.780228,69:38.780228,69.5:38.780228,70:38.780228,70.5:38.780228,71:38.780228,71.5:38.780228,72:38.780228,72.5:38.780228,73:38.780228,73.5:38.780228,74:38.780228,74.5:38.780228,75:38.780228},
            37:{0.5:3.604246,1:5.161086,1.5:7.092332,2:9.428748,2.5:12.197348,3:15.424392,3.5:19.145148,4:23.384378,4.5:28.163838,5:33.536812,5.5:36.331544,6:39.437052,6.5:42.871352,7:46.647956,7.5:46.647956,8:46.647956,8.5:46.647956,9:46.647956,9.5:46.647956,10:46.647956,10.5:46.647956,11:46.647956,11.5:46.647956,12:46.647956,12.5:46.647956,13:46.647956,13.5:46.647956,14:46.647956,14.5:46.647956,15:46.647956,15.5:46.647956,16:46.647956,16.5:46.647956,17:46.647956,17.5:46.647956,18:46.647956,18.5:46.647956,19:46.647956,19.5:46.647956,20:46.647956,20.5:46.647956,21:46.647956,21.5:46.647956,22:46.647956,22.5:46.647956,23:46.647956,23.5:46.647956,24:46.647956,24.5:46.647956,25:46.647956,25.5:46.647956,26:46.647956,26.5:46.647956,27:46.647956,27.5:46.647956,28:46.647956,28.5:46.647956,29:46.647956,29.5:46.647956,30:46.647956,30.5:46.647956,31:46.647956,31.5:46.647956,32:46.647956,32.5:46.647956,33:46.647956,33.5:46.647956,34:46.647956,34.5:46.647956,35:46.647956,35.5:46.647956,36:46.647956,36.5:46.647956,37:46.647956,37.5:46.647956,38:46.647956,38.5:46.647956,39:46.647956,39.5:46.647956,40:46.647956,40.5:46.647956,41:46.647956,41.5:46.647956,42:46.647956,42.5:46.647956,43:46.647956,43.5:46.647956,44:46.647956,44.5:46.647956,45:46.647956,45.5:46.647956,46:46.647956,46.5:46.647956,47:46.647956,47.5:46.647956,48:46.647956,48.5:46.647956,49:46.647956,49.5:46.647956,50:46.647956,50.5:46.647956,51:46.647956,51.5:46.647956,52:46.647956,52.5:46.647956,53:46.647956,53.5:46.647956,54:46.647956,54.5:46.647956,55:46.647956,55.5:46.647956,56:46.647956,56.5:46.647956,57:46.647956,57.5:46.647956,58:46.647956,58.5:46.647956,59:46.647956,59.5:46.647956,60:46.647956,60.5:46.647956,61:46.647956,61.5:46.647956,62:46.647956,62.5:46.647956,63:46.647956,63.5:46.647956,64:46.647956,64.5:46.647956,65:46.647956,65.5:46.647956,66:46.647956,66.5:46.647956,67:46.647956,67.5:46.647956,68:46.647956,68.5:46.647956,69:46.647956,69.5:46.647956,70:46.647956,70.5:46.647956,71:46.647956,71.5:46.647956,72:46.647956,72.5:46.647956,73:46.647956,73.5:46.647956,74:46.647956,74.5:46.647956,75:46.647956},
            38:{0.5:3.571994,1:5.163504,1.5:7.150998,2:9.568122,2.5:12.446022,3:15.811588,3.5:19.705222,4:24.154692,4.5:29.180132,5:34.848968,5.5:39.041066,6:43.699328,6.5:48.850778,7:54.515684,7.5:54.515684,8:54.515684,8.5:54.515684,9:54.515684,9.5:54.515684,10:54.515684,10.5:54.515684,11:54.515684,11.5:54.515684,12:54.515684,12.5:54.515684,13:54.515684,13.5:54.515684,14:54.515684,14.5:54.515684,15:54.515684,15.5:54.515684,16:54.515684,16.5:54.515684,17:54.515684,17.5:54.515684,18:54.515684,18.5:54.515684,19:54.515684,19.5:54.515684,20:54.515684,20.5:54.515684,21:54.515684,21.5:54.515684,22:54.515684,22.5:54.515684,23:54.515684,23.5:54.515684,24:54.515684,24.5:54.515684,25:54.515684,25.5:54.515684,26:54.515684,26.5:54.515684,27:54.515684,27.5:54.515684,28:54.515684,28.5:54.515684,29:54.515684,29.5:54.515684,30:54.515684,30.5:54.515684,31:54.515684,31.5:54.515684,32:54.515684,32.5:54.515684,33:54.515684,33.5:54.515684,34:54.515684,34.5:54.515684,35:54.515684,35.5:54.515684,36:54.515684,36.5:54.515684,37:54.515684,37.5:54.515684,38:54.515684,38.5:54.515684,39:54.515684,39.5:54.515684,40:54.515684,40.5:54.515684,41:54.515684,41.5:54.515684,42:54.515684,42.5:54.515684,43:54.515684,43.5:54.515684,44:54.515684,44.5:54.515684,45:54.515684,45.5:54.515684,46:54.515684,46.5:54.515684,47:54.515684,47.5:54.515684,48:54.515684,48.5:54.515684,49:54.515684,49.5:54.515684,50:54.515684,50.5:54.515684,51:54.515684,51.5:54.515684,52:54.515684,52.5:54.515684,53:54.515684,53.5:54.515684,54:54.515684,54.5:54.515684,55:54.515684,55.5:54.515684,56:54.515684,56.5:54.515684,57:54.515684,57.5:54.515684,58:54.515684,58.5:54.515684,59:54.515684,59.5:54.515684,60:54.515684,60.5:54.515684,61:54.515684,61.5:54.515684,62:54.515684,62.5:54.515684,63:54.515684,63.5:54.515684,64:54.515684,64.5:54.515684,65:54.515684,65.5:54.515684,66:54.515684,66.5:54.515684,67:54.515684,67.5:54.515684,68:54.515684,68.5:54.515684,69:54.515684,69.5:54.515684,70:54.515684,70.5:54.515684,71:54.515684,71.5:54.515684,72:54.515684,72.5:54.515684,73:54.515684,73.5:54.515684,74:54.515684,74.5:54.515684,75:54.515684},
            39:{0.5:3.539742,1:5.165922,1.5:7.209664,2:9.707496,2.5:12.694696,3:16.198784,3.5:20.265296,4:24.925006,4.5:30.196426,5:36.161124,5.5:41.750588,6:47.961604,6.5:54.830204,7:62.383412,7.5:62.383412,8:62.383412,8.5:62.383412,9:62.383412,9.5:62.383412,10:62.383412,10.5:62.383412,11:62.383412,11.5:62.383412,12:62.383412,12.5:62.383412,13:62.383412,13.5:62.383412,14:62.383412,14.5:62.383412,15:62.383412,15.5:62.383412,16:62.383412,16.5:62.383412,17:62.383412,17.5:62.383412,18:62.383412,18.5:62.383412,19:62.383412,19.5:62.383412,20:62.383412,20.5:62.383412,21:62.383412,21.5:62.383412,22:62.383412,22.5:62.383412,23:62.383412,23.5:62.383412,24:62.383412,24.5:62.383412,25:62.383412,25.5:62.383412,26:62.383412,26.5:62.383412,27:62.383412,27.5:62.383412,28:62.383412,28.5:62.383412,29:62.383412,29.5:62.383412,30:62.383412,30.5:62.383412,31:62.383412,31.5:62.383412,32:62.383412,32.5:62.383412,33:62.383412,33.5:62.383412,34:62.383412,34.5:62.383412,35:62.383412,35.5:62.383412,36:62.383412,36.5:62.383412,37:62.383412,37.5:62.383412,38:62.383412,38.5:62.383412,39:62.383412,39.5:62.383412,40:62.383412,40.5:62.383412,41:62.383412,41.5:62.383412,42:62.383412,42.5:62.383412,43:62.383412,43.5:62.383412,44:62.383412,44.5:62.383412,45:62.383412,45.5:62.383412,46:62.383412,46.5:62.383412,47:62.383412,47.5:62.383412,48:62.383412,48.5:62.383412,49:62.383412,49.5:62.383412,50:62.383412,50.5:62.383412,51:62.383412,51.5:62.383412,52:62.383412,52.5:62.383412,53:62.383412,53.5:62.383412,54:62.383412,54.5:62.383412,55:62.383412,55.5:62.383412,56:62.383412,56.5:62.383412,57:62.383412,57.5:62.383412,58:62.383412,58.5:62.383412,59:62.383412,59.5:62.383412,60:62.383412,60.5:62.383412,61:62.383412,61.5:62.383412,62:62.383412,62.5:62.383412,63:62.383412,63.5:62.383412,64:62.383412,64.5:62.383412,65:62.383412,65.5:62.383412,66:62.383412,66.5:62.383412,67:62.383412,67.5:62.383412,68:62.383412,68.5:62.383412,69:62.383412,69.5:62.383412,70:62.383412,70.5:62.383412,71:62.383412,71.5:62.383412,72:62.383412,72.5:62.383412,73:62.383412,73.5:62.383412,74:62.383412,74.5:62.383412,75:62.383412},
            40:{0.5:3.50749,1:5.16834,1.5:7.26833,2:9.84687,2.5:12.94337,3:16.58598,3.5:20.82537,4:25.69532,4.5:31.21272,5:37.47328,5.5:44.46011,6:52.22388,6.5:60.80963,7:70.25114,7.5:70.25114,8:70.25114,8.5:70.25114,9:70.25114,9.5:70.25114,10:70.25114,10.5:70.25114,11:70.25114,11.5:70.25114,12:70.25114,12.5:70.25114,13:70.25114,13.5:70.25114,14:70.25114,14.5:70.25114,15:70.25114,15.5:70.25114,16:70.25114,16.5:70.25114,17:70.25114,17.5:70.25114,18:70.25114,18.5:70.25114,19:70.25114,19.5:70.25114,20:70.25114,20.5:70.25114,21:70.25114,21.5:70.25114,22:70.25114,22.5:70.25114,23:70.25114,23.5:70.25114,24:70.25114,24.5:70.25114,25:70.25114,25.5:70.25114,26:70.25114,26.5:70.25114,27:70.25114,27.5:70.25114,28:70.25114,28.5:70.25114,29:70.25114,29.5:70.25114,30:70.25114,30.5:70.25114,31:70.25114,31.5:70.25114,32:70.25114,32.5:70.25114,33:70.25114,33.5:70.25114,34:70.25114,34.5:70.25114,35:70.25114,35.5:70.25114,36:70.25114,36.5:70.25114,37:70.25114,37.5:70.25114,38:70.25114,38.5:70.25114,39:70.25114,39.5:70.25114,40:70.25114,40.5:70.25114,41:70.25114,41.5:70.25114,42:70.25114,42.5:70.25114,43:70.25114,43.5:70.25114,44:70.25114,44.5:70.25114,45:70.25114,45.5:70.25114,46:70.25114,46.5:70.25114,47:70.25114,47.5:70.25114,48:70.25114,48.5:70.25114,49:70.25114,49.5:70.25114,50:70.25114,50.5:70.25114,51:70.25114,51.5:70.25114,52:70.25114,52.5:70.25114,53:70.25114,53.5:70.25114,54:70.25114,54.5:70.25114,55:70.25114,55.5:70.25114,56:70.25114,56.5:70.25114,57:70.25114,57.5:70.25114,58:70.25114,58.5:70.25114,59:70.25114,59.5:70.25114,60:70.25114,60.5:70.25114,61:70.25114,61.5:70.25114,62:70.25114,62.5:70.25114,63:70.25114,63.5:70.25114,64:70.25114,64.5:70.25114,65:70.25114,65.5:70.25114,66:70.25114,66.5:70.25114,67:70.25114,67.5:70.25114,68:70.25114,68.5:70.25114,69:70.25114,69.5:70.25114,70:70.25114,70.5:70.25114,71:70.25114,71.5:70.25114,72:70.25114,72.5:70.25114,73:70.25114,73.5:70.25114,74:70.25114,74.5:70.25114,75:70.25114},
            41:{0.5:3.466992,1:5.151672,1.5:7.291664,2:9.930496,2.5:13.108696,3:15.859784,3.5:21.234296,4:26.269256,4.5:31.988176,5:38.478624,5.5:45.736088,6:53.813104,6.5:62.753704,7:72.598912,7.5:75.114912,8:77.869912,8.5:80.873912,9:84.134912,9.5:84.134912,10:84.134912,10.5:84.134912,11:84.134912,11.5:84.134912,12:84.134912,12.5:84.134912,13:84.134912,13.5:84.134912,14:84.134912,14.5:84.134912,15:84.134912,15.5:84.134912,16:84.134912,16.5:84.134912,17:84.134912,17.5:84.134912,18:84.134912,18.5:84.134912,19:84.134912,19.5:84.134912,20:84.134912,20.5:84.134912,21:84.134912,21.5:84.134912,22:84.134912,22.5:84.134912,23:84.134912,23.5:84.134912,24:84.134912,24.5:84.134912,25:84.134912,25.5:84.134912,26:84.134912,26.5:84.134912,27:84.134912,27.5:84.134912,28:84.134912,28.5:84.134912,29:84.134912,29.5:84.134912,30:84.134912,30.5:84.134912,31:84.134912,31.5:84.134912,32:84.134912,32.5:84.134912,33:84.134912,33.5:84.134912,34:84.134912,34.5:84.134912,35:84.134912,35.5:84.134912,36:84.134912,36.5:84.134912,37:84.134912,37.5:84.134912,38:84.134912,38.5:84.134912,39:84.134912,39.5:84.134912,40:84.134912,40.5:84.134912,41:84.134912,41.5:84.134912,42:84.134912,42.5:84.134912,43:84.134912,43.5:84.134912,44:84.134912,44.5:84.134912,45:84.134912,45.5:84.134912,46:84.134912,46.5:84.134912,47:84.134912,47.5:84.134912,48:84.134912,48.5:84.134912,49:84.134912,49.5:84.134912,50:84.134912,50.5:84.134912,51:84.134912,51.5:84.134912,52:84.134912,52.5:84.134912,53:84.134912,53.5:84.134912,54:84.134912,54.5:84.134912,55:84.134912,55.5:84.134912,56:84.134912,56.5:84.134912,57:84.134912,57.5:84.134912,58:84.134912,58.5:84.134912,59:84.134912,59.5:84.134912,60:84.134912,60.5:84.134912,61:84.134912,61.5:84.134912,62:84.134912,62.5:84.134912,63:84.134912,63.5:84.134912,64:84.134912,64.5:84.134912,65:84.134912,65.5:84.134912,66:84.134912,66.5:84.134912,67:84.134912,67.5:84.134912,68:84.134912,68.5:84.134912,69:84.134912,69.5:84.134912,70:84.134912,70.5:84.134912,71:84.134912,71.5:84.134912,72:84.134912,72.5:84.134912,73:84.134912,73.5:84.134912,74:84.134912,74.5:84.134912,75:84.134912},
            42:{0.5:3.426494,1:5.135004,1.5:7.314998,2:10.014122,2.5:13.274022,3:15.133588,3.5:21.643222,4:26.843192,4.5:32.763632,5:39.483968,5.5:47.012066,6:55.402328,6.5:64.697778,7:74.946684,7.5:79.978684,8:85.488684,8.5:91.496684,9:98.018684,9.5:98.018684,10:98.018684,10.5:98.018684,11:98.018684,11.5:98.018684,12:98.018684,12.5:98.018684,13:98.018684,13.5:98.018684,14:98.018684,14.5:98.018684,15:98.018684,15.5:98.018684,16:98.018684,16.5:98.018684,17:98.018684,17.5:98.018684,18:98.018684,18.5:98.018684,19:98.018684,19.5:98.018684,20:98.018684,20.5:98.018684,21:98.018684,21.5:98.018684,22:98.018684,22.5:98.018684,23:98.018684,23.5:98.018684,24:98.018684,24.5:98.018684,25:98.018684,25.5:98.018684,26:98.018684,26.5:98.018684,27:98.018684,27.5:98.018684,28:98.018684,28.5:98.018684,29:98.018684,29.5:98.018684,30:98.018684,30.5:98.018684,31:98.018684,31.5:98.018684,32:98.018684,32.5:98.018684,33:98.018684,33.5:98.018684,34:98.018684,34.5:98.018684,35:98.018684,35.5:98.018684,36:98.018684,36.5:98.018684,37:98.018684,37.5:98.018684,38:98.018684,38.5:98.018684,39:98.018684,39.5:98.018684,40:98.018684,40.5:98.018684,41:98.018684,41.5:98.018684,42:98.018684,42.5:98.018684,43:98.018684,43.5:98.018684,44:98.018684,44.5:98.018684,45:98.018684,45.5:98.018684,46:98.018684,46.5:98.018684,47:98.018684,47.5:98.018684,48:98.018684,48.5:98.018684,49:98.018684,49.5:98.018684,50:98.018684,50.5:98.018684,51:98.018684,51.5:98.018684,52:98.018684,52.5:98.018684,53:98.018684,53.5:98.018684,54:98.018684,54.5:98.018684,55:98.018684,55.5:98.018684,56:98.018684,56.5:98.018684,57:98.018684,57.5:98.018684,58:98.018684,58.5:98.018684,59:98.018684,59.5:98.018684,60:98.018684,60.5:98.018684,61:98.018684,61.5:98.018684,62:98.018684,62.5:98.018684,63:98.018684,63.5:98.018684,64:98.018684,64.5:98.018684,65:98.018684,65.5:98.018684,66:98.018684,66.5:98.018684,67:98.018684,67.5:98.018684,68:98.018684,68.5:98.018684,69:98.018684,69.5:98.018684,70:98.018684,70.5:98.018684,71:98.018684,71.5:98.018684,72:98.018684,72.5:98.018684,73:98.018684,73.5:98.018684,74:98.018684,74.5:98.018684,75:98.018684},
            43:{0.5:3.385996,1:5.118336,1.5:7.338332,2:10.097748,2.5:13.439348,3:14.407392,3.5:22.052148,4:27.417128,4.5:33.539088,5:40.489312,5.5:48.288044,6:56.991552,6.5:66.641852,7:77.294456,7.5:84.842456,8:93.107456,8.5:102.119456,9:111.902456,9.5:111.902456,10:111.902456,10.5:111.902456,11:111.902456,11.5:111.902456,12:111.902456,12.5:111.902456,13:111.902456,13.5:111.902456,14:111.902456,14.5:111.902456,15:111.902456,15.5:111.902456,16:111.902456,16.5:111.902456,17:111.902456,17.5:111.902456,18:111.902456,18.5:111.902456,19:111.902456,19.5:111.902456,20:111.902456,20.5:111.902456,21:111.902456,21.5:111.902456,22:111.902456,22.5:111.902456,23:111.902456,23.5:111.902456,24:111.902456,24.5:111.902456,25:111.902456,25.5:111.902456,26:111.902456,26.5:111.902456,27:111.902456,27.5:111.902456,28:111.902456,28.5:111.902456,29:111.902456,29.5:111.902456,30:111.902456,30.5:111.902456,31:111.902456,31.5:111.902456,32:111.902456,32.5:111.902456,33:111.902456,33.5:111.902456,34:111.902456,34.5:111.902456,35:111.902456,35.5:111.902456,36:111.902456,36.5:111.902456,37:111.902456,37.5:111.902456,38:111.902456,38.5:111.902456,39:111.902456,39.5:111.902456,40:111.902456,40.5:111.902456,41:111.902456,41.5:111.902456,42:111.902456,42.5:111.902456,43:111.902456,43.5:111.902456,44:111.902456,44.5:111.902456,45:111.902456,45.5:111.902456,46:111.902456,46.5:111.902456,47:111.902456,47.5:111.902456,48:111.902456,48.5:111.902456,49:111.902456,49.5:111.902456,50:111.902456,50.5:111.902456,51:111.902456,51.5:111.902456,52:111.902456,52.5:111.902456,53:111.902456,53.5:111.902456,54:111.902456,54.5:111.902456,55:111.902456,55.5:111.902456,56:111.902456,56.5:111.902456,57:111.902456,57.5:111.902456,58:111.902456,58.5:111.902456,59:111.902456,59.5:111.902456,60:111.902456,60.5:111.902456,61:111.902456,61.5:111.902456,62:111.902456,62.5:111.902456,63:111.902456,63.5:111.902456,64:111.902456,64.5:111.902456,65:111.902456,65.5:111.902456,66:111.902456,66.5:111.902456,67:111.902456,67.5:111.902456,68:111.902456,68.5:111.902456,69:111.902456,69.5:111.902456,70:111.902456,70.5:111.902456,71:111.902456,71.5:111.902456,72:111.902456,72.5:111.902456,73:111.902456,73.5:111.902456,74:111.902456,74.5:111.902456,75:111.902456},
            44:{0.5:3.345498,1:5.101668,1.5:7.361666,2:10.181374,2.5:13.604674,3:13.681196,3.5:22.461074,4:27.991064,4.5:34.314544,5:41.494656,5.5:49.564022,6:58.580776,6.5:68.585926,7:79.642228,7.5:89.706228,8:100.726228,8.5:112.742228,9:125.786228,9.5:125.786228,10:125.786228,10.5:125.786228,11:125.786228,11.5:125.786228,12:125.786228,12.5:125.786228,13:125.786228,13.5:125.786228,14:125.786228,14.5:125.786228,15:125.786228,15.5:125.786228,16:125.786228,16.5:125.786228,17:125.786228,17.5:125.786228,18:125.786228,18.5:125.786228,19:125.786228,19.5:125.786228,20:125.786228,20.5:125.786228,21:125.786228,21.5:125.786228,22:125.786228,22.5:125.786228,23:125.786228,23.5:125.786228,24:125.786228,24.5:125.786228,25:125.786228,25.5:125.786228,26:125.786228,26.5:125.786228,27:125.786228,27.5:125.786228,28:125.786228,28.5:125.786228,29:125.786228,29.5:125.786228,30:125.786228,30.5:125.786228,31:125.786228,31.5:125.786228,32:125.786228,32.5:125.786228,33:125.786228,33.5:125.786228,34:125.786228,34.5:125.786228,35:125.786228,35.5:125.786228,36:125.786228,36.5:125.786228,37:125.786228,37.5:125.786228,38:125.786228,38.5:125.786228,39:125.786228,39.5:125.786228,40:125.786228,40.5:125.786228,41:125.786228,41.5:125.786228,42:125.786228,42.5:125.786228,43:125.786228,43.5:125.786228,44:125.786228,44.5:125.786228,45:125.786228,45.5:125.786228,46:125.786228,46.5:125.786228,47:125.786228,47.5:125.786228,48:125.786228,48.5:125.786228,49:125.786228,49.5:125.786228,50:125.786228,50.5:125.786228,51:125.786228,51.5:125.786228,52:125.786228,52.5:125.786228,53:125.786228,53.5:125.786228,54:125.786228,54.5:125.786228,55:125.786228,55.5:125.786228,56:125.786228,56.5:125.786228,57:125.786228,57.5:125.786228,58:125.786228,58.5:125.786228,59:125.786228,59.5:125.786228,60:125.786228,60.5:125.786228,61:125.786228,61.5:125.786228,62:125.786228,62.5:125.786228,63:125.786228,63.5:125.786228,64:125.786228,64.5:125.786228,65:125.786228,65.5:125.786228,66:125.786228,66.5:125.786228,67:125.786228,67.5:125.786228,68:125.786228,68.5:125.786228,69:125.786228,69.5:125.786228,70:125.786228,70.5:125.786228,71:125.786228,71.5:125.786228,72:125.786228,72.5:125.786228,73:125.786228,73.5:125.786228,74:125.786228,74.5:125.786228,75:125.786228},
            45:{0.5:3.305,1:5.085,1.5:7.385,2:10.265,2.5:13.77,3:12.955,3.5:22.87,4:28.565,4.5:35.09,5:42.5,5.5:50.84,6:60.17,6.5:70.53,7:81.99,7.5:94.57,8:108.345,8.5:123.365,9:139.67,9.5:139.67,10:139.67,10.5:139.67,11:139.67,11.5:139.67,12:139.67,12.5:139.67,13:139.67,13.5:139.67,14:139.67,14.5:139.67,15:139.67,15.5:139.67,16:139.67,16.5:139.67,17:139.67,17.5:139.67,18:139.67,18.5:139.67,19:139.67,19.5:139.67,20:139.67,20.5:139.67,21:139.67,21.5:139.67,22:139.67,22.5:139.67,23:139.67,23.5:139.67,24:139.67,24.5:139.67,25:139.67,25.5:139.67,26:139.67,26.5:139.67,27:139.67,27.5:139.67,28:139.67,28.5:139.67,29:139.67,29.5:139.67,30:139.67,30.5:139.67,31:139.67,31.5:139.67,32:139.67,32.5:139.67,33:139.67,33.5:139.67,34:139.67,34.5:139.67,35:139.67,35.5:139.67,36:139.67,36.5:139.67,37:139.67,37.5:139.67,38:139.67,38.5:139.67,39:139.67,39.5:139.67,40:139.67,40.5:139.67,41:139.67,41.5:139.67,42:139.67,42.5:139.67,43:139.67,43.5:139.67,44:139.67,44.5:139.67,45:139.67,45.5:139.67,46:139.67,46.5:139.67,47:139.67,47.5:139.67,48:139.67,48.5:139.67,49:139.67,49.5:139.67,50:139.67,50.5:139.67,51:139.67,51.5:139.67,52:139.67,52.5:139.67,53:139.67,53.5:139.67,54:139.67,54.5:139.67,55:139.67,55.5:139.67,56:139.67,56.5:139.67,57:139.67,57.5:139.67,58:139.67,58.5:139.67,59:139.67,59.5:139.67,60:139.67,60.5:139.67,61:139.67,61.5:139.67,62:139.67,62.5:139.67,63:139.67,63.5:139.67,64:139.67,64.5:139.67,65:139.67,65.5:139.67,66:139.67,66.5:139.67,67:139.67,67.5:139.67,68:139.67,68.5:139.67,69:139.67,69.5:139.67,70:139.67,70.5:139.67,71:139.67,71.5:139.67,72:139.67,72.5:139.67,73:139.67,73.5:139.67,74:139.67,74.5:139.67,75:139.67}
           }

# depth_records - data associated with depth layers
# structure: {depth:[soil_type,tsf]}, where depth is in ft, type - soil type
# after running calculate_soil_weight - structure: {depth:[soil_type,tsf,wt]}
depth_records = {
1:[1,55],
2:[1,55],
3:[1,2],
4:[3,55],
5:[3,55],
6:[3,55],
7:[3,55],
8:[3,55],
9:[3,55],
10:[3,55],
11:[3,55],
12:[3,2],
13:[2,2],
14:[2,2],
15:[2,2],
16:[2,2],
17:[2,4],
18:[2,4],
19:[2,4],
20:[2,4],
21:[2,4],
22:[2,4],
23:[2,4],
24:[2,4],
25:[2,4],
26:[2,4],
27:[2,4],
28:[2,4],
29:[2,4],
30:[2,4],
31:[2,4],
32:[2,4],
33:[2,4],
34:[2,4],
35:[2,4],
36:[2,4],
37:[2,4],
38:[3,25],
39:[3,25],
40:[3,25],
41:[3,25],
42:[3,25],
43:[3,25],
44:[3,25],
45:[3,25],
46:[3,25],
47:[3,25],
48:[3,25],
49:[3,25],
50:[3,25]
}



# calculates soil weight for a specific depth layer, without summing up all the layers on top of it
def calculate_soil_weight_for_layer(water_table, depth, soil_type, coeffs_table, spt):
    if soil_type in coeffs_table.keys():
        if water_table < depth:
            c = coeffs_table[soil_type][0]
        else:
            c = coeffs_table[soil_type][1]

        return min(c[0] + c[1] * spt, c[2])
    else:
        return -1;


# # calculates soil weight for each layer and adds it to the sum of all previous layers,
# # then adds as the first member in the list for each key in depth_records
# # Example:
# # depth_records = {
# # 1:[1,55, 135],
# # 2:[1,55, 270],
# # 3:[1,2, 364]
# def calculate_soil_weight(depth_records, water_table, soil_type, coeffs_table, spt):
#     sum_wt = 0
#     for d in sorted(depth_records):
#         wt = sum_wt + calculate_soil_weight_for_layer(water_table, int(d), soil_type, coeffs_table, spt)
#         depth_records[d].append(wt)
#     return depth_records
#
# depth_records = calculate_soil_weight(depth_records)
#
# print(depth_records)

# represents a set of entered and calculated values for a given depth
class DepthRecord():

    def __init__(self, depth, depth_records, Project):
        self.depth = depth

        if depth in depth_records.keys():
            self.soil_type = depth_records[depth][0]
            self.tsf = depth_records[depth][1]
        else:
            return -1 # specified depth doesn't exist

        # calculate SPT (N) based on soil_study_type (CPT or SPT)
        if self.depth not in depth_records.keys():
            return -1

        self.soil_study_type = Project.soil_study_type
        if self.soil_study_type.lower() == 'spt':
            self.spt = depth_records[self.depth][1]
        elif self.soil_study_type.lower() == 'cpt':
            Ic = cpt_index[self.soil_type]
            self.spt = depth_records[self.depth][1] / (8.5 * (1 - (Ic / 4.75)))
        else:
            return -1;

        # calculate Soil Weight
        # for this layer only, not for all the layers on top of it
        self.soil_weight = calculate_soil_weight_for_layer(Project.water_table, self.depth, self.soil_type, soil_weight_coeffs, self.spt)

        # calculate PHI
        # only for soil_type == sand
        if self.soil_type == 3:
            c = phi_coeffs[3]
            self.phi = round(c[0] + c[1] * self.spt)
        else:
            self.phi = 0

        # calculate Cohesion
        if self.soil_type == 3:
            self.cohesion = cohesion_coeffs[self.soil_type][0]
        else:
            self.cohesion = cohesion_coeffs[self.soil_type][0] * self.spt


# data defined at the project level
class Project():

    def __init__(self, shaft, comp_load, comp_load_sf, tension_load, tension_load_sf, height_above_grade,
                 name, number, city, state_province, date, boring_number,
                 water_table, soil_study_type):

        self.shaft = shaft
        self.comp_load = comp_load
        self.comp_load_sf = comp_load_sf
        self.tension_load = tension_load
        self.tension_load_sf = tension_load_sf
        self.height_above_grade = height_above_grade
        self.name = name
        self.number = number
        self.city = city
        self.state_province = state_province
        self.date = date
        self.boring_number = boring_number
        self.water_table = water_table
        self.soil_study_type = soil_study_type


# TEST ################################################################################################

shaft               = 1.5
comp_load           = 1500
comp_load_sf        = 2
tension_load        = 0
tension_load_sf     = 2
height_above_grade  = 3
name                = 'Test Project'
number              = 1
city                = 'Atlanta'
state_province      = 'GA'
date                = '2019-10-05'
boring_number       = 1
water_table         = 45
soil_study_type     = 'SPT'

project = Project(shaft, comp_load, comp_load_sf, tension_load, tension_load_sf, height_above_grade, name, number, city, state_province, date, boring_number, water_table, soil_study_type)


#record_5 = DepthRecord(5,depth_records, project)
#print(record_5.soil_type)
#print(record_5.spt)
#print(record_5.soil_weight)
#print(record_5.phi)
#print(record_5.cohesion)

#print(calculate_soil_weight(45,5,1,soil_weight_coeffs_table,25))

# calculates helix area
# formula: pi / 4 * (helix_diameter / 12)^2
def calculate_helix_area(helix_diameter):
    return pi / (4 * ((helix_diameter / 12)**2))



# d - depth
# fq_table - dictionary of fq values by:
#   - PHI
#   - (d / helix_diameter) in increments of .5
#  structure: {phi:{nq:fq,...},...}
#     e.g.: fq = fq_table[30][1.5]
def calculate_fq(phi, d, helix_diameter, fq_table):
    hd = round_to_half(d / (helix_diameter / 12))
    if phi in fq_table.keys():
        if hd in fq_table[phi].keys():
            return fq_table[phi][hd]
        else:
            return -1
    else:
        return -1



def round_to_half(number):
    return round(number * 2) / 2



def calculate_pile_length(helices, Project):
    # Pile length
    for h in helices: # for all helix diameters

        # determine if single, double, or triple helix
        ds = list(map(int, h.split('/'))) # list of helix diameters for the pile
        num_h = len(ds)
        if num_h > 3:
            return -1

        print(f'Helix {h} ----------------------------------')
        print(f'height above grade to be plotted: {Project.height_above_grade}')

        # calculate helix area(s)
        areas = list(map(calculate_helix_area, ds))
        print(f'areas: {areas}')

        for d in sorted(depth_records): #for all depths

            # if DepthRecord for a depth does not exist - create
            # Append to depth_records 1:[1,55] --> 1:[1,55, DepthRecord]
            # Otherwise obtain from the current depth_records record
            if(len(depth_records[d]) == 2):
                dr = DepthRecord(d,depth_records,project)
                # update soil weight
                # sum up all soil weights on top of this layer
                if d > 1:
                    dr.soil_weight = depth_records[d - 1][2].soil_weight + dr.soil_weight
                depth_records[d].append(dr)
            else:
                dr = depth_records[d][2]

            # calculate q
            if dr.soil_type == 1 or dr.soil_type == 2: # clay or silt

                # single helix
                q = areas[0] * (q_coeffs[0][0] - q_coeffs[0][1] * m.log(dr.spt)) * q_coeffs[0][2] * dr.spt

                # double helix
                if num_h > 1:
                    q = q + q_coeffs[1][3] * areas[1] * q_coeffs[1][4] * dr.spt * (q_coeffs[1][5] - q_coeffs[1][6] * m.log(dr.spt))

                # triple helix
                if num_h > 2:
                    q = q + q_coeffs[2][7] * areas[2] * (q_coeffs[2][8] - q_coeffs[2][9] * m.log(dr.spt))

                if num_h > 1:
                    q = q / Project.comp_load_sf

            elif dr.soil_type == 3: # sand

                # calculate fq
                # fq_table structure: {phi:{nq:fq,...},...}
                #  e.g.: fq = fq_table[30][1.5]
                # d - depth
                # ds[0] - helix_diameter

                # single helix
                fq = calculate_fq(dr.phi, d, ds[0], fq_table)
                if fq == -1:
                    print(f'Failed to calculate fq for phi=[{dr.phi}]')

                q = areas[0] * fq

                # double helix
                if num_h > 1:
                    fq = calculate_fq(dr.phi, d, ds[1], fq_table)
                    if fq == -1:
                        print(f'Failed to calculate fq for phi=[{dr.phi}]')
                    q = q + areas[1] * fq

                # triple helix
                if num_h > 2:
                    fq = calculate_fq(dr.phi, d, ds[2], fq_table)
                    if fq == -1:
                        print(f'Failed to calculate fq for phi=[{dr.phi}]')
                    q = q + areas[2] * fq

                q = (q * dr.soil_weight) / Project.comp_load_sf

            else:
                return -1

            # Calculate total settlement settlement (ts)

            # calculate nu
            if dr.soil_type == 1:
                if d < Project.water_table:
                    nu = 0.3
                else:
                    nu = 0.45
            elif dr.soil_type == 2:  # silt
                if d < Project.water_table:
                    nu = 0.35
                else:
                    nu = 0.45
            else: # sand
                nu = 0.2

            # calculate D (av2) - stress and strain
            av2 = (stiffness * (0.56**3)) / (12 * (1 - nu**2))

            av1 = (0.25 + Project.shaft / 2) / (Project.shaft / 2)
            kc = interp(av1, ba, ky)

            # calculate helix_flex
            # calculate for the largest helix
            max_area = max(areas)
            helix_flex = (((kc * Project.comp_load * Project.comp_load_sf) / (max_area * av2)) * ((Project.shaft / 2 + 0.25) ** 4))/num_h

            # calculate helix_tip (tip settlement)
            helix_tip = (pi/4) * Project.comp_load * Project.comp_load_sf * (1 - nu**2) * 0.85 * 12

            # Shaft area
            if Project.shaft in shaft_areas.keys():
                shaft_area = shaft_areas[Project.shaft]
            else:
                return -1

            # calculate elastic shortening
            es = (Project.comp_load * Project.comp_load_sf * d * 12) / (shaft_area * stiffness)

            # Total settlement
            ts = es + helix_flex + helix_tip

            # (calculate settlement)

            # plot the pile above grade - height_above_grade
            if (q > Project.comp_load and q > Project.tension_load) and (d > (max(ds)/12 * 5)):

                print(f'q: {q}')

                # plot the pile below grade as d
                print(f'plot pile below grade: {d}')

                # specify total settlement (ts) at the bottom
                print(f'Total settlement: {ts}')

                break
        # (for deapth records)

        print('--------------------------------------------')
        print(' ')
        print(' ')
        print(' ')

    # (for h in helices)

# (calculate_pile_length)


calculate_pile_length(helices, project)






#a = 1

# (TEST) ##############################################################################################

